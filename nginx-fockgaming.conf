# /etc/nginx/sites-available/fockgaming
# FockGaming.com SSL Yapılandırması

server {
    listen 80;
    server_name fockgaming.com www.fockgaming.com;
    
    # HTTPS'e yönlendirme
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name fockgaming.com www.fockgaming.com;
    
    root /var/www/fockgaming;
    index index.html index.php;
    
    # SSL sertifikaları (Certbot otomatik ekleyecek)
    ssl_certificate /etc/letsencrypt/live/fockgaming.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fockgaming.com/privkey.pem;
    
    # SSL güvenlik ayarları
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:;" always;
    
    # Ana sayfa ve statik dosyalar
    location / {
        try_files $uri $uri/ =404;
    }
    
    # PHP dosyalarını işle
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
    }
    
    # Bot webhook endpoint
    location = /bot-listener.php {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Bot güvenliği
        allow 149.154.160.0/20;
        allow 91.108.4.0/22;
        deny all;
    }
    
    # API endpoints
    location /api/ {
        try_files $uri $uri/ =404;
        
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_read_timeout 300;
        }
    }
    
    # Debug endpoint (geliştirme için)
    location = /debug-server.php {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Sadece belirli IP'lerden erişim (isteğe bağlı)
        # allow YOUR_IP_HERE;
        # deny all;
    }
    
    # Güvenlik: Gizli dosyalara erişimi engelle
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Güvenlik: Log ve config dosyalarına erişimi engelle
    location ~* \.(log|conf|txt)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Data klasörünü koru
    location ^~ /data/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Cache static files
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff2|woff|ttf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}